{"ast":null,"code":"var _jsxFileName = \"/Users/mohsin/Desktop/portfolio/src/components/Intro3/index.js\";\nimport \"./styles.css\";\nimport React, { useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport gsap from \"gsap\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../../assets/animations/services.json\";\nimport { Timeline } from \"gsap/gsap-core\";\n\nconst Intro3 = props => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData\n  };\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger);\n    var t1 = new Timeline();\n    var t2 = new Timeline();\n    var t3 = new Timeline();\n    var t4 = new Timeline(); // gsap.to(\".iMake\", {\n    //   scrollTrigger: {\n    //     trigger: \".hero2\",\n    //     start: \"top center\",\n    //     end: \"bottom center\",\n    //     scrub: 1,\n    //     markers: \"true\",\n    //   },\n    //   color: \"#0068fa\",\n    // });\n    // gsap.to(\".iMake\", {\n    //   scrollTrigger: {\n    //     trigger: \".hero2\",\n    //     end: \"top center\",\n    //     start: \"bottom center\",\n    //     scrub: 1,\n    //     markers: \"true\",\n    //   },\n    //   color: \"#2f3542\",\n    //   immediateRender: false,\n    // });\n\n    t1.fromTo(\".myTechStack\", {\n      rotateZ: 0,\n      transLateX: 0\n    }, {\n      rotateZ: 90,\n      transLateX: 100,\n      scrollTrigger: {\n        trigger: \".myTechStack\",\n        toggleActions: \"play none none reverse\",\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: 1.5\n      }\n    });\n    gsap.timeline({\n      scrollTrigger: {\n        trigger: \".hero3\",\n        pin: \".hero3\",\n        start: \"center center\",\n        end: \"+=2000\" // scrub: 1,\n        // markers: true,\n\n      }\n    }); //ScrollTrigger broke react-router. Below is a fix for it.\n\n    return () => {\n      ScrollTrigger.getAll().forEach(instance => {\n        instance.kill();\n      });\n      gsap.killTweensOf(window);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      height: \"100vh\"\n    },\n    className: \"hero3 vw-100 d-flex flex-column align-items-center justify-content-center overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid row \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 d-flex  flex-column\",\n    style: {\n      marginLeft: \"5vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"myTechStack\",\n    style: {\n      fontWeight: \"800\",\n      fontSize: \"4vw\",\n      textShadow: \"0px 0px 10px rgba(47,53,66,0.3)\",\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"MY TECK STACK\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Intro3;","map":{"version":3,"sources":["/Users/mohsin/Desktop/portfolio/src/components/Intro3/index.js"],"names":["React","useEffect","FormattedMessage","ScrollTrigger","gsap","Lottie","animationData","Timeline","Intro3","props","defaultOptions","loop","autoplay","registerPlugin","t1","t2","t3","t4","fromTo","rotateZ","transLateX","scrollTrigger","trigger","toggleActions","start","end","scrub","timeline","pin","getAll","forEach","instance","kill","killTweensOf","window","height","marginLeft","fontWeight","fontSize","textShadow","userSelect"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport React, { useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport gsap from \"gsap\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../../assets/animations/services.json\";\nimport { Timeline } from \"gsap/gsap-core\";\n\nconst Intro3 = (props) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n  };\n\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger);\n    var t1 = new Timeline();\n    var t2 = new Timeline();\n    var t3 = new Timeline();\n    var t4 = new Timeline();\n\n    // gsap.to(\".iMake\", {\n    //   scrollTrigger: {\n    //     trigger: \".hero2\",\n    //     start: \"top center\",\n    //     end: \"bottom center\",\n    //     scrub: 1,\n    //     markers: \"true\",\n    //   },\n    //   color: \"#0068fa\",\n    // });\n\n    // gsap.to(\".iMake\", {\n    //   scrollTrigger: {\n    //     trigger: \".hero2\",\n    //     end: \"top center\",\n    //     start: \"bottom center\",\n    //     scrub: 1,\n    //     markers: \"true\",\n    //   },\n    //   color: \"#2f3542\",\n    //   immediateRender: false,\n    // });\n\n    t1.fromTo(\n      \".myTechStack\",\n      { rotateZ: 0, transLateX: 0 },\n      {\n        rotateZ: 90,\n        transLateX: 100,\n        scrollTrigger: {\n          trigger: \".myTechStack\",\n          toggleActions: \"play none none reverse\",\n          start: \"top center\",\n          end: \"bottom center\",\n          scrub: 1.5,\n        },\n      }\n    );\n\n    gsap.timeline({\n      scrollTrigger: {\n        trigger: \".hero3\",\n        pin: \".hero3\",\n        start: \"center center\",\n        end: \"+=2000\",\n        // scrub: 1,\n        // markers: true,\n      },\n    });\n\n    //ScrollTrigger broke react-router. Below is a fix for it.\n    return () => {\n      ScrollTrigger.getAll().forEach((instance) => {\n        instance.kill();\n      });\n      gsap.killTweensOf(window);\n    };\n  }, []);\n\n  return (\n    <section\n      style={{ height: \"100vh\" }}\n      className='hero3 vw-100 d-flex flex-column align-items-center justify-content-center overflow-hidden'\n    >\n      <div className='container-fluid row '>\n        <div\n          className='col-md-7 d-flex  flex-column'\n          style={{ marginLeft: \"5vw\" }}\n        >\n          <h1\n            className='myTechStack'\n            style={{\n              fontWeight: \"800\",\n              fontSize: \"4vw\",\n              textShadow: \"0px 0px 10px rgba(47,53,66,0.3)\",\n              userSelect: \"none\",\n            }}\n          >\n            <FormattedMessage id='MY TECK STACK' />\n          </h1>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Intro3;\n"]},"metadata":{},"sourceType":"module"}