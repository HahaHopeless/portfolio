{"ast":null,"code":"function e(t) {\n  return (e = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(t);\n}\n\nfunction t(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction n(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var a = t[n];\n    a.enumerable = a.enumerable || !1, a.configurable = !0, \"value\" in a && (a.writable = !0), Object.defineProperty(e, a.key, a);\n  }\n}\n\nfunction a(e, t) {\n  if (null == e) return {};\n\n  var n,\n      a,\n      i = function (e, t) {\n    if (null == e) return {};\n    var n,\n        a,\n        i = {},\n        r = Object.keys(e);\n\n    for (a = 0; a < r.length; a++) n = r[a], t.indexOf(n) >= 0 || (i[n] = e[n]);\n\n    return i;\n  }(e, t);\n\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n\n    for (a = 0; a < r.length; a++) n = r[a], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n]);\n  }\n\n  return i;\n}\n\nfunction i(e, t) {\n  var n = t.get(e);\n  if (!n) throw new TypeError(\"attempted to get private field on non-instance\");\n  return n.get ? n.get.call(e) : n.value;\n}\n\nvar r = {\n  player: \"lottie-player\"\n},\n    o = \"[lottieInteractivity]:\",\n    s = function () {\n  function s() {\n    var n = this,\n        k = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : r,\n        S = k.actions,\n        A = k.container,\n        M = k.mode,\n        T = k.player,\n        C = a(k, [\"actions\", \"container\", \"mode\", \"player\"]);\n\n    if (t(this, s), l.set(this, {\n      writable: !0,\n      value: function () {\n        if (n.player) {\n          var e = function () {\n            n.player.addEventListener(\"enterFrame\", i(n, h)), n.container.addEventListener(\"mouseenter\", i(n, f)), n.container.addEventListener(\"mouseleave\", i(n, g));\n          };\n\n          n.stateHandler.set(\"loop\", function () {\n            n.actions[n.interactionIdx].loop ? n.player.loop = parseInt(n.actions[n.interactionIdx].loop) - 1 : n.player.loop = !0, n.player.autoplay = !0;\n          }), n.stateHandler.set(\"autoplay\", function () {\n            n.player.loop = !1, n.player.autoplay = !0;\n          }), n.stateHandler.set(\"click\", function () {\n            n.player.loop = !1, n.player.autoplay = !1, n.container.addEventListener(\"click\", i(n, c));\n          }), n.stateHandler.set(\"hover\", function () {\n            n.player.loop = !1, n.player.autoplay = !1, n.container.addEventListener(\"mouseenter\", i(n, c));\n          }), n.transitionHandler.set(\"click\", function () {\n            n.container.addEventListener(\"click\", i(n, p));\n          }), n.transitionHandler.set(\"hover\", function () {\n            n.container.addEventListener(\"mouseenter\", i(n, p));\n          }), n.transitionHandler.set(\"hold\", e), n.transitionHandler.set(\"pauseHold\", e), n.transitionHandler.set(\"repeat\", function () {\n            n.player.loop = !0, n.player.autoplay = !0;\n            n.player.addEventListener(\"loopComplete\", function e() {\n              i(n, m).call(n, {\n                handler: e\n              });\n            });\n          }), n.transitionHandler.set(\"onComplete\", function () {\n            \"loop\" === n.actions[n.interactionIdx].state ? n.player.addEventListener(\"loopComplete\", i(n, u)) : n.player.addEventListener(\"complete\", i(n, u));\n          }), n.transitionHandler.set(\"seek\", function () {\n            n.player.stop(), n.player.addEventListener(\"enterFrame\", i(n, v)), n.container.addEventListener(\"mousemove\", i(n, d)), n.container.addEventListener(\"mouseout\", i(n, y));\n          });\n        }\n      }\n    }), c.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.actions[n.interactionIdx].forceFlag;\n        e || !0 !== n.player.isPaused ? e && i(n, w).call(n, !0) : i(n, w).call(n, !0);\n      }\n    }), p.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.actions[n.interactionIdx].forceFlag;\n\n        if (\"chain\" === n.mode) {\n          if (n.actions[n.interactionIdx].count) {\n            var t = parseInt(n.actions[n.interactionIdx].count);\n            if (n.clickCounter < t - 1) return void (n.clickCounter += 1);\n          }\n\n          return n.clickCounter = 0, n.container.removeEventListener(\"click\", i(n, p)), n.container.removeEventListener(\"mouseenter\", i(n, p)), void i(n, E).call(n);\n        }\n\n        e || !0 !== n.player.isPaused ? e && n.player.goToAndPlay(0, !0) : n.player.goToAndPlay(0, !0);\n      }\n    }), d.set(this, {\n      writable: !0,\n      value: function (e) {\n        i(n, I).call(n, e.clientX, e.clientY);\n      }\n    }), y.set(this, {\n      writable: !0,\n      value: function () {\n        i(n, I).call(n, -1, -1);\n      }\n    }), u.set(this, {\n      writable: !0,\n      value: function () {\n        \"loop\" === n.actions[n.interactionIdx].state ? n.player.removeEventListener(\"loopComplete\", i(n, u)) : n.player.removeEventListener(\"complete\", i(n, u)), i(n, E).call(n);\n      }\n    }), m.set(this, {\n      writable: !0,\n      value: function (e) {\n        var t = e.handler,\n            a = 1;\n        n.actions[n.interactionIdx].repeat && (a = n.actions[n.interactionIdx].repeat), n.playCounter >= a - 1 ? (n.playCounter = 0, n.player.removeEventListener(\"loopComplete\", t), n.player.loop = !1, n.player.autoplay = !1, i(n, E).call(n)) : n.playCounter += 1;\n      }\n    }), v.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.actions[n.interactionIdx].frames;\n        e && n.player.currentFrame >= parseInt(e[1]) - 1 && (n.player.removeEventListener(\"enterFrame\", i(n, v)), n.container.removeEventListener(\"mousemove\", i(n, d)), n.container.removeEventListener(\"mouseout\", i(n, y)), setTimeout(i(n, E), 0));\n      }\n    }), h.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.actions[n.interactionIdx].frames;\n        (e && n.player.currentFrame >= e[1] || n.player.currentFrame >= n.player.totalFrames - 1) && (n.player.removeEventListener(\"enterFrame\", i(n, h)), n.container.removeEventListener(\"mouseenter\", i(n, f)), n.container.removeEventListener(\"mouseleave\", i(n, g)), n.player.pause(), i(n, E).call(n));\n      }\n    }), f.set(this, {\n      writable: !0,\n      value: function () {\n        -1 !== n.player.playDirection && 0 !== n.player.currentFrame && \"pauseHold\" !== n.actions[n.interactionIdx].transition && \"pauseHold\" !== n.actions[0].type || (n.player.setDirection(1), n.player.play());\n      }\n    }), g.set(this, {\n      writable: !0,\n      value: function () {\n        \"hold\" === n.actions[n.interactionIdx].transition || \"hold\" === n.actions[0].type ? (n.player.setDirection(-1), n.player.play()) : \"pauseHold\" !== n.actions[n.interactionIdx].transition && \"pauseHold\" !== n.actions[0].type || n.player.pause();\n      }\n    }), L.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.actions[n.interactionIdx].state;\n        \"hover\" !== e && \"click\" !== e || (n.container.removeEventListener(\"click\", i(n, c)), n.container.removeEventListener(\"mouseenter\", i(n, c)));\n      }\n    }), E.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.interactionIdx;\n        i(n, L).call(n);\n        var t = n.actions[n.interactionIdx].jumpTo;\n        t ? t >= 0 && t < n.actions.length ? (n.interactionIdx = t, i(n, x).call(n, {\n          ignorePath: !1\n        })) : (n.interactionIdx = 0, n.player.goToAndStop(0, !0), i(n, x).call(n, {\n          ignorePath: !1\n        })) : (n.interactionIdx++, n.interactionIdx >= n.actions.length ? n.actions[n.actions.length - 1].reset ? (n.interactionIdx = 0, n.player.goToAndStop(0, !0), i(n, x).call(n, {\n          ignorePath: !1\n        })) : (n.interactionIdx = n.actions.length - 1, i(n, x).call(n, {\n          ignorePath: !1\n        })) : i(n, x).call(n, {\n          ignorePath: !1\n        })), n.container.dispatchEvent(new CustomEvent(\"transition\", {\n          bubbles: !0,\n          composed: !0,\n          detail: {\n            oldIndex: e,\n            newIndex: n.interactionIdx\n          }\n        }));\n      }\n    }), w.set(this, {\n      writable: !0,\n      value: function (e) {\n        var t = n.actions[n.interactionIdx].frames;\n        if (!t) return n.player.resetSegments(!0), void n.player.goToAndPlay(0, !0);\n        \"string\" == typeof t ? n.player.goToAndPlay(t, e) : n.player.playSegments(t, e);\n      }\n    }), b.set(this, {\n      writable: !0,\n      value: function () {\n        var t = n.actions[n.interactionIdx].path;\n        if (!t) if (\"object\" === e(n.enteredPlayer) && \"AnimationItem\" === n.enteredPlayer.constructor.name) {\n          if (t = n.enteredPlayer, n.player === t) return void i(n, x).call(n, {\n            ignorePath: !0\n          });\n        } else {\n          var a = (t = n.loadedAnimation).substr(t.lastIndexOf(\"/\") + 1);\n          if (a = a.substr(0, a.lastIndexOf(\".json\")), n.player.fileName === a) return void i(n, x).call(n, {\n            ignorePath: !0\n          });\n        }\n        var r = n.container.getBoundingClientRect(),\n            s = \"width: \" + r.width + \"px !important; height: \" + r.height + \"px !important; background: \" + n.container.style.background;\n\n        if (n.container.setAttribute(\"style\", s), \"object\" !== e(n.enteredPlayer) || \"AnimationItem\" !== n.enteredPlayer.constructor.name) {\n          if (\"string\" == typeof n.enteredPlayer) {\n            var l = document.querySelector(n.enteredPlayer);\n            l && \"LOTTIE-PLAYER\" === l.nodeName && (n.attachedListeners || (l.addEventListener(\"ready\", function () {\n              n.container.style.width = \"\", n.container.style.height = \"\";\n            }), l.addEventListener(\"load\", function () {\n              n.player = l.getLottie(), i(n, x).call(n, {\n                ignorePath: !0\n              });\n            }), n.attachedListeners = !0), l.load(t));\n          } else n.enteredPlayer instanceof HTMLElement && \"LOTTIE-PLAYER\" === n.enteredPlayer.nodeName && (n.attachedListeners || (n.enteredPlayer.addEventListener(\"ready\", function () {\n            n.container.style.width = \"\", n.container.style.height = \"\";\n          }), n.enteredPlayer.addEventListener(\"load\", function () {\n            n.player = n.enteredPlayer.getLottie(), i(n, x).call(n, {\n              ignorePath: !0\n            });\n          }), n.attachedListeners = !0), n.enteredPlayer.load(t));\n\n          if (!n.player) throw new Error(\"\".concat(o, \" Specified player is invalid.\"), n.enteredPlayer);\n        } else {\n          if (!window.lottie) throw new Error(\"\".concat(o, \" A Lottie player is required.\"));\n          n.stop(), n.player.destroy(), n.container.innerHTML = \"\", \"object\" === e(t) && \"AnimationItem\" === t.constructor.name ? n.player = window.lottie.loadAnimation({\n            loop: !1,\n            autoplay: !1,\n            animationData: t.animationData,\n            container: n.container\n          }) : n.player = window.lottie.loadAnimation({\n            loop: !1,\n            autoplay: !1,\n            path: t,\n            container: n.container\n          }), n.player.addEventListener(\"DOMLoaded\", function () {\n            n.container.style.width = \"\", n.container.style.height = \"\", i(n, x).call(n, {\n              ignorePath: !0\n            });\n          });\n        }\n\n        n.clickCounter = 0, n.playCounter = 0;\n      }\n    }), x.set(this, {\n      writable: !0,\n      value: function (e) {\n        var t = e.ignorePath,\n            a = n.actions[n.interactionIdx].state,\n            r = n.actions[n.interactionIdx].transition,\n            o = n.actions[n.interactionIdx].path,\n            s = n.stateHandler.get(a),\n            l = n.transitionHandler.get(r),\n            c = n.actions[n.interactionIdx].speed ? n.actions[n.interactionIdx].speed : 1,\n            p = n.actions[n.interactionIdx].delay ? n.actions[n.interactionIdx].delay : 0;\n        t || !(o || n.actions[n.actions.length - 1].reset && 0 === n.interactionIdx) ? setTimeout(function () {\n          s ? s.call() : \"none\" === a && (n.player.loop = !1, n.player.autoplay = !1), l && l.call(), n.player.autoplay && (n.player.resetSegments(!0), i(n, w).call(n, !0)), n.player.setSpeed(c);\n        }, p) : i(n, b).call(n);\n      }\n    }), I.set(this, {\n      writable: !0,\n      value: function (e, t) {\n        if (-1 !== e && -1 !== t) {\n          var a = n.getContainerCursorPosition(e, t);\n          e = a.x, t = a.y;\n        }\n\n        var i = n.actions.find(function (n) {\n          var a = n.position;\n\n          if (a) {\n            if (Array.isArray(a.x) && Array.isArray(a.y)) return e >= a.x[0] && e <= a.x[1] && t >= a.y[0] && t <= a.y[1];\n            if (!Number.isNaN(a.x) && !Number.isNaN(a.y)) return e === a.x && t === a.y;\n          }\n\n          return !1;\n        });\n        if (i) if (\"seek\" === i.type || \"seek\" === i.transition) {\n          var r = (e - i.position.x[0]) / (i.position.x[1] - i.position.x[0]),\n              o = (t - i.position.y[0]) / (i.position.y[1] - i.position.y[0]);\n          n.player.playSegments(i.frames, !0), i.position.y[0] < 0 && i.position.y[1] > 1 ? n.player.goToAndStop(Math.floor(r * n.player.totalFrames), !0) : n.player.goToAndStop(Math.ceil((r + o) / 2 * n.player.totalFrames), !0);\n        } else \"loop\" === i.type ? n.player.playSegments(i.frames, !0) : \"play\" === i.type ? (!0 === n.player.isPaused && n.player.resetSegments(), n.player.playSegments(i.frames)) : \"stop\" === i.type && n.player.goToAndStop(i.frames[0], !0);\n      }\n    }), P.set(this, {\n      writable: !0,\n      value: function () {\n        var e = n.getContainerVisibility(),\n            t = n.actions.find(function (t) {\n          var n = t.visibility;\n          return e >= n[0] && e <= n[1];\n        });\n        if (t) if (\"seek\" === t.type) {\n          var a = t.frames[0],\n              i = 2 == t.frames.length ? t.frames[1] : n.player.totalFrames - 1;\n          null !== n.assignedSegment && (n.player.resetSegments(!0), n.assignedSegment = null), n.player.goToAndStop(a + Math.round((e - t.visibility[0]) / (t.visibility[1] - t.visibility[0]) * (i - a)), !0);\n        } else \"loop\" === t.type ? (n.player.loop = !0, (null === n.assignedSegment || n.assignedSegment !== t.frames || !0 === n.player.isPaused) && (n.player.playSegments(t.frames, !0), n.assignedSegment = t.frames)) : \"play\" === t.type ? n.scrolledAndPlayed || (n.scrolledAndPlayed = !0, n.player.resetSegments(!0), n.player.play()) : \"stop\" === t.type && n.player.goToAndStop(t.frames[0], !0);\n      }\n    }), this.enteredPlayer = T, \"object\" !== e(T) || \"AnimationItem\" !== T.constructor.name) {\n      if (\"string\" == typeof T) {\n        var H = document.querySelector(T);\n        H && \"LOTTIE-PLAYER\" === H.nodeName && (T = H.getLottie());\n      } else T instanceof HTMLElement && \"LOTTIE-PLAYER\" === T.nodeName && (T = T.getLottie());\n\n      if (!T) {\n        var O = o + \"Specified player:\" + T + \" is invalid.\";\n        throw new Error(O);\n      }\n    }\n\n    \"string\" == typeof A && (A = document.querySelector(A)), A || (A = T.wrapper), this.player = T, this.loadedAnimation = this.player.path + this.player.fileName + \".json\", this.attachedListeners = !1, this.container = A, this.mode = M, this.actions = S, this.options = C, this.assignedSegment = null, this.scrolledAndPlayed = !1, this.interactionIdx = 0, this.clickCounter = 0, this.playCounter = 0, this.stateHandler = new Map(), this.transitionHandler = new Map();\n  }\n\n  var k, S, A;\n  return k = s, (S = [{\n    key: \"getContainerVisibility\",\n    value: function () {\n      var e = this.container.getBoundingClientRect(),\n          t = e.top,\n          n = e.height;\n      return (window.innerHeight - t) / (window.innerHeight + n);\n    }\n  }, {\n    key: \"getContainerCursorPosition\",\n    value: function (e, t) {\n      var n = this.container.getBoundingClientRect(),\n          a = n.top;\n      return {\n        x: (e - n.left) / n.width,\n        y: (t - a) / n.height\n      };\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var e = this;\n      \"scroll\" === this.mode ? this.player.addEventListener(\"DOMLoaded\", function () {\n        e.player.stop(), window.addEventListener(\"scroll\", i(e, P));\n      }) : \"cursor\" === this.mode ? this.player.addEventListener(\"DOMLoaded\", function () {\n        e.actions && 1 === e.actions.length ? \"click\" === e.actions[0].type ? (e.player.loop = !1, e.player.stop(), e.container.addEventListener(\"click\", i(e, p))) : \"hover\" === e.actions[0].type ? (e.player.loop = !1, e.player.stop(), e.container.addEventListener(\"mouseenter\", i(e, p))) : \"hold\" === e.actions[0].type || \"pauseHold\" === e.actions[0].type ? (e.container.addEventListener(\"mouseenter\", i(e, f)), e.container.addEventListener(\"mouseleave\", i(e, g))) : \"seek\" === e.actions[0].type && (e.player.loop = !0, e.player.stop(), e.container.addEventListener(\"mousemove\", i(e, d)), e.container.addEventListener(\"mouseout\", i(e, y))) : (e.player.loop = !0, e.player.stop(), e.container.addEventListener(\"mousemove\", i(e, d)), e.container.addEventListener(\"mouseout\", i(e, y)));\n      }) : \"chain\" === this.mode && (this.player.isLoaded ? (i(e, l).call(e), e.player.loop = !1, e.player.stop(), i(e, x).call(e, {\n        ignorePath: !1\n      })) : this.player.addEventListener(\"DOMLoaded\", function () {\n        i(e, l).call(e), e.player.loop = !1, e.player.stop(), i(e, x).call(e, {\n          ignorePath: !1\n        });\n      }));\n    }\n  }, {\n    key: \"redefineOptions\",\n    value: function (t) {\n      var n = t.actions,\n          i = t.container,\n          r = t.mode,\n          s = t.player,\n          l = a(t, [\"actions\", \"container\", \"mode\", \"player\"]);\n\n      if (this.stop(), this.player.stop(), this.enteredPlayer = s, \"object\" !== e(s) || \"AnimationItem\" !== s.constructor.name) {\n        if (\"string\" == typeof s) {\n          var c = document.querySelector(s);\n          c && \"LOTTIE-PLAYER\" === c.nodeName && (s = c.getLottie());\n        } else s instanceof HTMLElement && \"LOTTIE-PLAYER\" === s.nodeName && (s = s.getLottie());\n\n        if (!s) throw new Error(o + \"Specified player:\" + s + \" is invalid.\", s);\n      }\n\n      \"string\" == typeof i && (i = document.querySelector(i)), i || (i = s.wrapper), this.player = s, this.loadedAnimation = this.player.path + this.player.fileName + \".json\", this.attachedListeners = !1, this.container = i, this.mode = r, this.actions = n, this.options = l, this.assignedSegment = null, this.scrolledAndPlayed = !1, this.interactionIdx = 0, this.clickCounter = 0, this.playCounter = 0, this.stateHandler = new Map(), this.transitionHandler = new Map(), this.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function () {\n      \"scroll\" === this.mode && window.removeEventListener(\"scroll\", i(this, P)), \"cursor\" === this.mode && (this.container.removeEventListener(\"click\", i(this, p)), this.container.removeEventListener(\"mouseenter\", i(this, p)), this.container.removeEventListener(\"mousemove\", i(this, d)), this.container.removeEventListener(\"mouseout\", i(this, y))), \"chain\" === this.mode && (this.container.removeEventListener(\"click\", i(this, p)), this.container.removeEventListener(\"click\", i(this, c)), this.container.removeEventListener(\"mouseenter\", i(this, p)), this.container.removeEventListener(\"mouseenter\", i(this, c)), this.container.removeEventListener(\"mouseenter\", i(this, f)), this.container.removeEventListener(\"mouseleave\", i(this, g)), this.container.removeEventListener(\"mousemove\", i(this, d)), this.container.removeEventListener(\"mouseout\", i(this, y)), this.player.removeEventListener(\"loopComplete\", i(this, u)), this.player.removeEventListener(\"complete\", i(this, u)), this.player.removeEventListener(\"enterFrame\", i(this, v)), this.player.removeEventListener(\"enterFrame\", i(this, h)));\n    }\n  }]) && n(k.prototype, S), A && n(k, A), s;\n}(),\n    l = new WeakMap(),\n    c = new WeakMap(),\n    p = new WeakMap(),\n    d = new WeakMap(),\n    y = new WeakMap(),\n    u = new WeakMap(),\n    m = new WeakMap(),\n    v = new WeakMap(),\n    h = new WeakMap(),\n    f = new WeakMap(),\n    g = new WeakMap(),\n    L = new WeakMap(),\n    E = new WeakMap(),\n    w = new WeakMap(),\n    b = new WeakMap(),\n    x = new WeakMap(),\n    I = new WeakMap(),\n    P = new WeakMap(),\n    k = function (e) {\n  var t = new s(e);\n  return t.start(), t;\n};\n\nexport default k;\nexport { s as LottieInteractivity, k as create };","map":{"version":3,"sources":["../src/main.js"],"names":["DEFAULT_OPTIONS","player","ERROR_PREFIX","LottieInteractivity","actions","container","mode","options","enteredPlayer","_typeof","constructor","name","elem","document","querySelector","nodeName","getLottie","HTMLElement","message","Error","wrapper","loadedAnimation","this","path","fileName","attachedListeners","assignedSegment","scrolledAndPlayed","interactionIdx","clickCounter","playCounter","stateHandler","Map","transitionHandler","top","height","getBoundingClientRect","window","innerHeight","cursorX","cursorY","left","width","x","y","Parentscope","addEventListener","stop","length","type","loop","isLoaded","ignorePath","start","removeEventListener","_this","parseInt","autoplay","holdTransition","handler","state","set","forceFlag","isPaused","count","clickLimit","goToAndPlay","e","clientX","clientY","repeatAmount","repeat","frames","currentFrame","setTimeout","totalFrames","pause","playDirection","transition","setDirection","play","oldIdx","jumpToIndex","jumpTo","goToAndStop","reset","dispatchEvent","CustomEvent","bubbles","composed","detail","oldIndex","newIndex","resetSegments","playSegments","substr","lastIndexOf","lottieContainerSize","newContainerStyle","style","background","setAttribute","load","lottie","destroy","innerHTML","loadAnimation","animationData","stateFunction","get","transitionFunction","speed","delay","call","setSpeed","pos","getContainerCursorPosition","action","find","position","Array","isArray","Number","isNaN","xPercent","yPercent","Math","floor","ceil","currentPercent","getContainerVisibility","visibility","end","round","create","instance"],"mappings":"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","sourcesContent":["const DEFAULT_OPTIONS = {\n  player: 'lottie-player',\n};\nconst LOTTIE_PLAYER_NODE = 'LOTTIE-PLAYER';\nconst ERROR_PREFIX = '[lottieInteractivity]:';\n\n/**\n * LottieFiles interactivity for Lottie\n */\nexport class LottieInteractivity {\n  constructor({ actions, container, mode, player, ...options } = DEFAULT_OPTIONS) {\n    // Save the original player entered by user, used for interaction chaining / loading animations on the fly\n    this.enteredPlayer = player;\n\n    // Resolve lottie instance specified in player option\n    if (!(typeof player === 'object' && player.constructor.name === 'AnimationItem')) {\n      if (typeof player === 'string') {\n        const elem = document.querySelector(player);\n\n        if (elem && elem.nodeName === LOTTIE_PLAYER_NODE) {\n          player = elem.getLottie();\n        }\n      } else if (player instanceof HTMLElement && player.nodeName === LOTTIE_PLAYER_NODE) {\n        player = player.getLottie();\n      }\n\n      // Throw error no player instance has been successfully resolved\n      if (!player) {\n        let message = ERROR_PREFIX + \"Specified player:\" + player + \" is invalid.\";\n\n        throw new Error(message);\n      }\n    }\n\n    // Get the configured container element.\n    if (typeof container === 'string') {\n      container = document.querySelector(container);\n    }\n\n    // Use player wrapper as fallback if container couldn't be resolved.\n    if (!container) {\n      container = player.wrapper;\n    }\n\n    this.player = player;\n    this.loadedAnimation = this.player.path + this.player.fileName + \".json\";\n    this.attachedListeners = false;\n    this.container = container;\n    this.mode = mode;\n    this.actions = actions;\n    this.options = options;\n    this.assignedSegment = null;\n    this.scrolledAndPlayed = false;\n\n    // Interaction chaining\n    this.interactionIdx = 0;\n    this.clickCounter = 0;\n    this.playCounter = 0;\n    this.stateHandler = new Map();\n    this.transitionHandler = new Map();\n  }\n\n  getContainerVisibility() {\n    // Get the bounding box for the lottie player or container\n    const { top, height } = this.container.getBoundingClientRect();\n\n    // Calculate current view percentage\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    return current / max;\n  }\n\n  getContainerCursorPosition(cursorX, cursorY) {\n    const { top, left, width, height } = this.container.getBoundingClientRect();\n\n    const x = (cursorX - left) / width;\n    const y = (cursorY - top) / height;\n\n    return { x, y };\n  }\n\n  start() {\n    const Parentscope = this;\n    // Configure player for start\n    if (this.mode === 'scroll') {\n      this.player.addEventListener('DOMLoaded', function () {\n        Parentscope.player.stop();\n        window.addEventListener('scroll', Parentscope.#scrollHandler);\n      });\n    } else if (this.mode === 'cursor') {\n      this.player.addEventListener('DOMLoaded', function () {\n        // To have click and hover interaction, force to only have that type and single action\n        // If there are multiple actions, click and hover are ignored\n        if (Parentscope.actions &&\n          Parentscope.actions.length === 1) {\n          if (Parentscope.actions[0].type === \"click\") {\n            Parentscope.player.loop = false;\n            Parentscope.player.stop();\n            Parentscope.container.addEventListener('click', Parentscope.#clickHoverHandler);\n          } else if (Parentscope.actions[0].type === \"hover\") {\n            Parentscope.player.loop = false;\n            Parentscope.player.stop();\n            Parentscope.container.addEventListener('mouseenter', Parentscope.#clickHoverHandler);\n          } else if (Parentscope.actions[0].type === \"hold\" || Parentscope.actions[0].type === \"pauseHold\") {\n            Parentscope.container.addEventListener('mouseenter', Parentscope.#holdTransitionEnter);\n            Parentscope.container.addEventListener('mouseleave', Parentscope.#holdTransitionLeave);\n          } else if (Parentscope.actions[0].type === \"seek\") {\n            Parentscope.player.loop = true;\n            Parentscope.player.stop();\n            Parentscope.container.addEventListener('mousemove', Parentscope.#mousemoveHandler);\n            Parentscope.container.addEventListener('mouseout', Parentscope.#mouseoutHandler);\n          }\n        } else {\n          Parentscope.player.loop = true;\n          Parentscope.player.stop();\n          Parentscope.container.addEventListener('mousemove', Parentscope.#mousemoveHandler);\n          Parentscope.container.addEventListener('mouseout', Parentscope.#mouseoutHandler);\n        }\n      });\n    } else if (this.mode === 'chain') {\n      // When passing animation object to LI the player is already loaded\n      if (this.player.isLoaded) {\n        Parentscope.#initInteractionMaps();\n        Parentscope.player.loop = false;\n        Parentscope.player.stop();\n        Parentscope.#chainedInteractionHandler({ignorePath: false});\n      } else {\n        this.player.addEventListener('DOMLoaded', function () {\n          Parentscope.#initInteractionMaps();\n          Parentscope.player.loop = false;\n          Parentscope.player.stop();\n          Parentscope.#chainedInteractionHandler({ignorePath: false});\n        });\n      }\n    }\n  }\n\n  redefineOptions({actions, container, mode, player, ...options}) {\n    this.stop();\n    this.player.stop();\n\n    // Save the original player entered by user, used for interaction chaining / loading animations on the fly\n    this.enteredPlayer = player;\n\n    // Resolve lottie instance specified in player option\n    if (!(typeof player === 'object' && player.constructor.name === 'AnimationItem')) {\n      if (typeof player === 'string') {\n        const elem = document.querySelector(player);\n\n        if (elem && elem.nodeName === LOTTIE_PLAYER_NODE) {\n          player = elem.getLottie();\n        }\n      } else if (player instanceof HTMLElement && player.nodeName === LOTTIE_PLAYER_NODE) {\n        player = player.getLottie();\n      }\n\n      // Throw error no player instance has been successfully resolved\n      if (!player) {\n        let message = ERROR_PREFIX + \"Specified player:\" + player + \" is invalid.\";\n\n        throw new Error(message, player);\n      }\n    }\n\n    // Get the configured container element.\n    if (typeof container === 'string') {\n      container = document.querySelector(container);\n    }\n\n    // Use player wrapper as fallback if container couldn't be resolved.\n    if (!container) {\n      container = player.wrapper;\n    }\n\n    this.player = player;\n    this.loadedAnimation = this.player.path + this.player.fileName + \".json\";\n    this.attachedListeners = false;\n    this.container = container;\n    this.mode = mode;\n    this.actions = actions;\n    this.options = options;\n    this.assignedSegment = null;\n    this.scrolledAndPlayed = false;\n\n    // Interaction chaining\n    this.interactionIdx = 0;\n    this.clickCounter = 0;\n    this.playCounter = 0;\n    this.stateHandler = new Map();\n    this.transitionHandler = new Map();\n\n    this.start();\n  }\n\n  stop() {\n    if (this.mode === 'scroll') {\n      window.removeEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'cursor') {\n        this.container.removeEventListener('click', this.#clickHoverHandler);\n        this.container.removeEventListener('mouseenter', this.#clickHoverHandler);\n        this.container.removeEventListener('mousemove', this.#mousemoveHandler);\n        this.container.removeEventListener('mouseout', this.#mouseoutHandler);\n    }\n\n    if (this.mode === 'chain') {\n      this.container.removeEventListener('click', this.#clickHoverHandler);\n      this.container.removeEventListener('click', this.#clickHoverStateHandler);\n\n      this.container.removeEventListener('mouseenter', this.#clickHoverHandler);\n      this.container.removeEventListener('mouseenter', this.#clickHoverStateHandler);\n      this.container.removeEventListener('mouseenter', this.#holdTransitionEnter);\n\n      this.container.removeEventListener('mouseleave', this.#holdTransitionLeave);\n      this.container.removeEventListener('mousemove', this.#mousemoveHandler);\n      this.container.removeEventListener('mouseout', this.#mouseoutHandler);\n\n      this.player.removeEventListener('loopComplete', this.#onCompleteHandler);\n      this.player.removeEventListener('complete', this.#onCompleteHandler);\n      this.player.removeEventListener('enterFrame', this.#cursorSyncHandler);\n      this.player.removeEventListener('enterFrame', this.#holdTransitionHandler);\n    }\n  }\n\n  /**\n   * [chain mode]\n   * Init the state and transitions maps containing all the state and transition methods used for interaction chaining\n   */\n  #initInteractionMaps = () => {\n    if (!this.player)\n      return ;\n\n    let loopState = () => {\n      if (this.actions[this.interactionIdx].loop) {\n        this.player.loop = parseInt(this.actions[this.interactionIdx].loop) - 1;\n      } else {\n        this.player.loop = true;\n      }\n      this.player.autoplay = true;\n    }\n    let autoplayState = () => {\n      this.player.loop = false;\n      this.player.autoplay = true;\n    }\n    let clickState = () => {\n      this.player.loop = false;\n      this.player.autoplay = false;\n      this.container.addEventListener('click', this.#clickHoverStateHandler);\n    }\n    let hoverState = () => {\n      this.player.loop = false;\n      this.player.autoplay = false;\n      this.container.addEventListener('mouseenter', this.#clickHoverStateHandler);\n    }\n    let clickTransition = () => {\n      this.container.addEventListener('click', this.#clickHoverHandler);\n    }\n    let hoverTransition = () => {\n      this.container.addEventListener('mouseenter', this.#clickHoverHandler);\n    }\n    let holdTransition = () => {\n      this.player.addEventListener('enterFrame', this.#holdTransitionHandler);\n      this.container.addEventListener('mouseenter', this.#holdTransitionEnter);\n      this.container.addEventListener('mouseleave', this.#holdTransitionLeave);\n    }\n    let repeatTransition = () => {\n      this.player.loop = true;\n      this.player.autoplay = true;\n      let handler = () => { this.#repeatTransition({handler}) };\n      this.player.addEventListener('loopComplete', handler);\n    }\n    let onCompleteTransition = () => {\n      let state = this.actions[this.interactionIdx].state;\n\n      if (state === 'loop')\n        this.player.addEventListener('loopComplete', this.#onCompleteHandler);\n      else\n        this.player.addEventListener('complete', this.#onCompleteHandler);\n    }\n    let cursorSyncTransition = () => {\n      this.player.stop();\n      this.player.addEventListener('enterFrame', this.#cursorSyncHandler);\n      this.container.addEventListener('mousemove', this.#mousemoveHandler);\n      this.container.addEventListener('mouseout', this.#mouseoutHandler);\n    }\n    this.stateHandler.set('loop', loopState);\n    this.stateHandler.set('autoplay', autoplayState);\n    this.stateHandler.set('click', clickState);\n    this.stateHandler.set('hover', hoverState);\n\n    this.transitionHandler.set('click', clickTransition);\n    this.transitionHandler.set('hover', hoverTransition);\n    this.transitionHandler.set('hold', holdTransition);\n    this.transitionHandler.set('pauseHold', holdTransition);\n    this.transitionHandler.set('repeat', repeatTransition);\n    this.transitionHandler.set('onComplete', onCompleteTransition);\n    this.transitionHandler.set('seek', cursorSyncTransition);\n  }\n\n  /**\n   * [chain mode]\n   * Handle hover state on chained interactions\n   */\n  #clickHoverStateHandler = () => {\n    let forceFlag = this.actions[this.interactionIdx].forceFlag;\n\n    if (!forceFlag && this.player.isPaused === true) {\n      this.#playSegmentHandler(true);\n    } else if (forceFlag) {\n      this.#playSegmentHandler(true);\n    }\n  }\n\n  /**\n   * [cursor + chain mode]\n   * Handle click and hover in both cursor and chain mode\n   */\n  #clickHoverHandler = () => {\n    let forceFlag = this.actions[this.interactionIdx].forceFlag;\n\n    // If we're in chain mode and the click or hover transition is used, otherwise just play the animation\n    if (this.mode === 'chain') {\n      // Check if there is a counter or not and make a transition\n      if (this.actions[this.interactionIdx].count) {\n        let clickLimit = parseInt(this.actions[this.interactionIdx].count);\n        if (this.clickCounter < clickLimit - 1) {\n          this.clickCounter += 1;\n          return ;\n        }\n      }\n      // No click counter, so we remove the listeners and got to next interaction\n      this.clickCounter = 0;\n      this.container.removeEventListener('click', this.#clickHoverHandler);\n      this.container.removeEventListener('mouseenter', this.#clickHoverHandler);\n      this.#nextInteraction();\n      return ;\n    }\n    // Using goToAndPlay rather than this.#playSegmentHandler(forceFlag) because we're in cursor mode\n    // there for we want to play from the beginning\n    if (!forceFlag && this.player.isPaused === true) {\n      this.player.goToAndPlay(0, true);\n    } else if (forceFlag) {\n      this.player.goToAndPlay(0, true);\n    }\n  }\n\n  // [cursor mode]\n  #mousemoveHandler = e => {\n    this.#cursorHandler(e.clientX, e.clientY);\n  };\n\n  // [cursor mode]\n  #mouseoutHandler = () => {\n    this.#cursorHandler(-1, -1);\n  };\n\n\n  /**\n   * [chain mode]\n   * Handle when a segment of the animation has finished playing\n   */\n  #onCompleteHandler = () => {\n      if (this.actions[this.interactionIdx].state === 'loop') {\n        this.player.removeEventListener('loopComplete', this.#onCompleteHandler);\n      } else {\n        this.player.removeEventListener('complete', this.#onCompleteHandler);\n      }\n      this.#nextInteraction();\n  }\n\n  // [chain mode]\n  #repeatTransition = ({handler}) => {\n    let repeatAmount = 1;\n\n    if (this.actions[this.interactionIdx].repeat)\n      repeatAmount = this.actions[this.interactionIdx].repeat;\n    if (this.playCounter >= repeatAmount - 1) {\n      this.playCounter = 0;\n      this.player.removeEventListener('loopComplete', handler);\n      this.player.loop = false;\n      this.player.autoplay = false;\n      this.#nextInteraction();\n    } else {\n      this.playCounter += 1;\n    }\n  }\n\n  /**\n   * [chain mode]\n   * TODO: How does this work with markers? Get marker duration?\n   */\n  #cursorSyncHandler = () => {\n    let frames = this.actions[this.interactionIdx].frames;\n\n    if (frames && this.player.currentFrame >= parseInt(frames[1]) - 1) {\n      this.player.removeEventListener('enterFrame', this.#cursorSyncHandler);\n      this.container.removeEventListener('mousemove', this.#mousemoveHandler);\n      this.container.removeEventListener('mouseout', this.#mouseoutHandler);\n      setTimeout(this.#nextInteraction, 0);\n    }\n  }\n\n  /**\n   * [chain mode]\n   * TODO: How does this work with markers? Get marker duration?\n   *\n   * With the hold transition we can't use playSegment so we have to manually verify if\n   * The user held long enough and check if the current frame is within the segment limits\n   *\n   */\n  #holdTransitionHandler = () => {\n    let frames = this.actions[this.interactionIdx].frames;\n\n    if ((frames && this.player.currentFrame >= frames[1]) || (this.player.currentFrame >= this.player.totalFrames - 1)) {\n      this.player.removeEventListener('enterFrame', this.#holdTransitionHandler);\n      this.container.removeEventListener('mouseenter', this.#holdTransitionEnter);\n      this.container.removeEventListener('mouseleave', this.#holdTransitionLeave);\n      this.player.pause();\n      this.#nextInteraction();\n    }\n  }\n\n  // [cursor + chain mode]\n  #holdTransitionEnter = () => {\n    if (this.player.playDirection === -1\n      || this.player.currentFrame === 0\n      || this.actions[this.interactionIdx].transition === \"pauseHold\"\n      || this.actions[0].type === \"pauseHold\") {\n      this.player.setDirection(1);\n      this.player.play();\n    }\n  }\n\n  // [cursor + chain mode]\n  #holdTransitionLeave = () => {\n    if (this.actions[this.interactionIdx].transition === \"hold\" || this.actions[0].type === \"hold\") {\n      this.player.setDirection(-1);\n      this.player.play();\n    } else if (this.actions[this.interactionIdx].transition === \"pauseHold\" || this.actions[0].type === \"pauseHold\"){\n      this.player.pause();\n    }\n  }\n\n  // [chain mode]\n  #clearStateListeners = () => {\n    let state = this.actions[this.interactionIdx].state;\n\n    if (state === \"hover\" || state === \"click\") {\n      this.container.removeEventListener('click', this.#clickHoverStateHandler);\n      this.container.removeEventListener('mouseenter', this.#clickHoverStateHandler);\n    }\n  }\n\n  // [chain mode]\n  #nextInteraction = () => {\n    let oldIdx =  this.interactionIdx;\n\n    // If state is hover or click we need to remove listeners\n    this.#clearStateListeners();\n\n    // Check if theres a jump-to before incrementing\n    let jumpToIndex = this.actions[this.interactionIdx].jumpTo;\n    if (jumpToIndex) {\n      // If jumpToIndex is inside action length jump to it otherwise go to first action\n      if (jumpToIndex >= 0 && jumpToIndex < this.actions.length) {\n        this.interactionIdx = jumpToIndex;\n        this.#chainedInteractionHandler({ignorePath: false});\n      } else {\n        this.interactionIdx = 0;\n        this.player.goToAndStop(0, true);\n        this.#chainedInteractionHandler({ignorePath: false});\n      }\n    } else {\n      // Go to next interaction\n      this.interactionIdx++;\n      if (this.interactionIdx >= this.actions.length) {\n        // Go back to the first interaction\n        if (this.actions[this.actions.length - 1].reset) {\n          this.interactionIdx = 0;\n          this.player.goToAndStop(0, true);\n          this.#chainedInteractionHandler({ignorePath: false});\n        }\n        else {\n          this.interactionIdx = this.actions.length - 1;\n          this.#chainedInteractionHandler({ignorePath: false});\n        }\n      } else {\n        this.#chainedInteractionHandler({ignorePath: false});\n      }\n    }\n\n    // Emit event from the lottie-player element\n    this.container.dispatchEvent(new CustomEvent(\"transition\", {\n      bubbles: true,\n      composed: true,\n      detail: { oldIndex: oldIdx, newIndex: this.interactionIdx }\n    }));\n  }\n\n  /**\n   * [chain mode]\n   * Checks if frames are an array or string, and calls appropriate method to play animation\n   */\n  #playSegmentHandler = (forceFlag) => {\n    let frames = this.actions[this.interactionIdx].frames;\n\n    //If no frame segment is defined, play the whole animation\n    if (!frames) {\n      this.player.resetSegments(true);\n      this.player.goToAndPlay(0, true);\n      return ;\n    }\n    // If using named markers\n    if (typeof frames === 'string') {\n      this.player.goToAndPlay(frames, forceFlag);\n    } else {\n      this.player.playSegments(frames, forceFlag);\n    }\n  }\n\n  /**\n   * [chain mode]\n   * Load a new animation using the path defined in the current interaction\n   */\n  #loadAnimationInChain = () => {\n    let path = this.actions[this.interactionIdx].path;\n\n    // The animation path declared on the lottie-player was saved in the constructor under 'enteredPlayer'\n    // We assume that the path on the lottie-player element is the animation to use in the first action\n    if (!path) {\n      // If we passed animationData to Lottie-Interactivity, load the animation data otherwise use the path\n      if (typeof this.enteredPlayer === 'object' && this.enteredPlayer.constructor.name === 'AnimationItem') {\n        path = this.enteredPlayer;\n\n        if (this.player === path) {\n          this.#chainedInteractionHandler({ignorePath: true});\n          return ;\n        }\n      } else {\n        path = this.loadedAnimation;\n        let fileName = path.substr(path.lastIndexOf('/') + 1);\n        fileName = fileName.substr(0, fileName.lastIndexOf('.json'));\n\n        // Prevents reloading animation the same animation\n        if (this.player.fileName === fileName) {\n          this.#chainedInteractionHandler({ignorePath: true});\n          return ;\n        }\n      }\n    }\n\n    // Force width and height on the container to retain its size while the next animation is being loaded\n    let lottieContainerSize = this.container.getBoundingClientRect();\n    let newContainerStyle = \"width: \" + lottieContainerSize.width + \"px !important; height: \" +\n      lottieContainerSize.height + \"px !important; background: \" + this.container.style.background;\n    this.container.setAttribute('style', newContainerStyle);\n\n    if (!(typeof this.enteredPlayer === 'object' && this.enteredPlayer.constructor.name === 'AnimationItem')) {\n      if (typeof this.enteredPlayer === 'string') {\n        const elem = document.querySelector(this.enteredPlayer);\n\n        if (elem && elem.nodeName === LOTTIE_PLAYER_NODE) {\n          // Prevents adding the listeners multiple times if multiple animations are needed to be loaded from actions\n          if (!this.attachedListeners) {\n            // Remove the styling that prevents flickering\n            elem.addEventListener(\"ready\", () => {\n              this.container.style.width = '';\n              this.container.style.height = '';\n            });\n            elem.addEventListener(\"load\", () => {\n              this.player = elem.getLottie();\n              this.#chainedInteractionHandler({ignorePath: true});\n            });\n            this.attachedListeners = true;\n          }\n          // The LottieFiles player destroys the animation when a new one is Loaded\n         elem.load(path);\n        }\n      } else if (this.enteredPlayer instanceof HTMLElement && this.enteredPlayer.nodeName === LOTTIE_PLAYER_NODE) {\n        // Prevents adding the listeners multiple times if multiple animations are needed to be loaded from actions\n        if (!this.attachedListeners) {\n          // Remove the styling that prevents flickering\n          this.enteredPlayer.addEventListener(\"ready\", () => {\n            this.container.style.width = '';\n            this.container.style.height = '';\n          });\n          this.enteredPlayer.addEventListener(\"load\", () => {\n            this.player = this.enteredPlayer.getLottie();\n            this.#chainedInteractionHandler({ignorePath: true});\n          });\n          this.attachedListeners = true;\n        }\n        // The LottieFiles player destroys the animation when a new one is Loaded\n        this.enteredPlayer.load(path);\n      }\n      // Throw error no player instance has been successfully resolved\n      if (!this.player) {\n        throw new Error(`${ERROR_PREFIX} Specified player is invalid.`, this.enteredPlayer);\n      }\n    } else {\n      if (window.lottie) {\n        this.stop();\n        this.player.destroy();\n        // Removes svg animation contained inside\n        this.container.innerHTML = \"\";\n\n        if (typeof path === 'object' && path.constructor.name === 'AnimationItem') {\n          this.player = window.lottie.loadAnimation({\n            loop: false,\n            autoplay: false,\n            animationData: path.animationData,\n            container: this.container\n          });\n        }\n        else {\n          this.player = window.lottie.loadAnimation({\n            loop: false,\n            autoplay: false,\n            path,\n            container: this.container\n          });\n        }\n\n        this.player.addEventListener('DOMLoaded', () => {\n          // Remove the styling that prevents flickering\n          this.container.style.width = '';\n          this.container.style.height = '';\n          this.#chainedInteractionHandler({ignorePath: true});\n        });\n      } else {\n        throw new Error(`${ERROR_PREFIX} A Lottie player is required.`);\n      }\n    }\n    // Reset counters\n    this.clickCounter = 0;\n    this.playCounter = 0;\n  }\n\n  /**\n   * [chain mode]\n   * Check the action object at the current interaction index and set the needed interaction listeners as well\n   * as any extra options\n   */\n  #chainedInteractionHandler = ({ignorePath}) => {\n    let state = this.actions[this.interactionIdx].state;\n    let transition = this.actions[this.interactionIdx].transition;\n    let path = this.actions[this.interactionIdx].path;\n    let stateFunction = this.stateHandler.get(state);\n    let transitionFunction = this.transitionHandler.get(transition);\n    let speed = this.actions[this.interactionIdx].speed ? this.actions[this.interactionIdx].speed : 1;\n    let delay = this.actions[this.interactionIdx].delay ? this.actions[this.interactionIdx].delay : 0;\n\n    // Check if path is detected or that we are at the beginning again and reset\n    // If we are back at the first action, we need to reload the animation declared on the lottie-player element\n    if (!ignorePath && (path || (this.actions[this.actions.length - 1].reset && this.interactionIdx === 0))) {\n      this.#loadAnimationInChain();\n      return ;\n    }\n    setTimeout( () => {\n      if (stateFunction) {\n        stateFunction.call();\n      } else if (state === \"none\") {\n        this.player.loop = false;\n        this.player.autoplay = false;\n      }\n      if (transitionFunction) {\n        transitionFunction.call();\n      }\n      if (this.player.autoplay) {\n        this.player.resetSegments(true);\n        this.#playSegmentHandler(true);\n      }\n      this.player.setSpeed(speed);\n    }, delay);\n  }\n\n  // [cursor mode]\n  #cursorHandler = (x, y) => {\n    // Resolve cursor position if cursor is inside container\n    if (x !== -1 && y !== -1) {\n      // Get container cursor position\n      const pos = this.getContainerCursorPosition(x, y);\n\n      // Use the resolved position\n      x = pos.x;\n      y = pos.y;\n    }\n\n    // Find the first action that satisfies the current position conditions\n    const action = this.actions.find(({ position }) => {\n      if (position) {\n        if (Array.isArray(position.x) && Array.isArray(position.y)) {\n          return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];\n        } else if (!Number.isNaN(position.x) && !Number.isNaN(position.y)) {\n          return x === position.x && y === position.y;\n        }\n      }\n\n      return false;\n    });\n\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n\n    // Process action types:\n    if (action.type === 'seek' || action.transition === 'seek') {\n      // Seek: Go to a frame based on player scroll position action\n      const xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);\n      const yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);\n\n      this.player.playSegments(action.frames, true);\n\n      if (action.position.y[0] < 0 && action.position.y[1] > 1) {\n        this.player.goToAndStop(Math.floor(xPercent * this.player.totalFrames), true);\n      } else {\n        this.player.goToAndStop(Math.ceil(((xPercent + yPercent) / 2) * this.player.totalFrames), true);\n      }\n    } else if (action.type === 'loop') {\n      this.player.playSegments(action.frames, true);\n    } else if (action.type === 'play') {\n      // Play: Reset segments and continue playing full animation from current position\n      if (this.player.isPaused === true) {\n        this.player.resetSegments();\n      }\n      this.player.playSegments(action.frames);\n    } else if (action.type === 'stop') {\n      // Stop: Stop playback\n      this.player.goToAndStop(action.frames[0], true);\n    }\n  };\n\n  // [scroll mode]\n  #scrollHandler = () => {\n    // Get container visibility percentage\n    const currentPercent = this.getContainerVisibility();\n\n    // Find the first action that satisfies the current position conditions\n    const action = this.actions.find(\n      ({ visibility }) => currentPercent >= visibility[0] && currentPercent <= visibility[1],\n    );\n\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n\n    // Process action types:\n    if (action.type === 'seek') {\n      // Seek: Go to a frame based on player scroll position action\n      const start = action.frames[0];\n      const end = action.frames.length == 2 ? action.frames[1] : (this.player.totalFrames - 1);\n\n      // Use global frame reference for frames within the seek section.\n      // Without this, if you follow a seek with a loop and then scroll back up,\n      // it will treat frame numbers as relative to the loop.\n      if (this.assignedSegment !== null) {\n        this.player.resetSegments(true);\n        this.assignedSegment = null;\n      }\n\n      this.player.goToAndStop(\n        start + Math.round(\n          ((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0])) *\n            (end - start)\n        ),\n        true,\n      );\n    } else if (action.type === 'loop') {\n      this.player.loop = true;\n      // Loop: Loop a given frames\n      if (this.assignedSegment === null) {\n        // if not playing any segments currently. play those segments and save to state\n        this.player.playSegments(action.frames, true);\n        this.assignedSegment = action.frames;\n      } else {\n        // if playing any segments currently.\n        //check if segments in state are equal to the frames selected by action\n        if (this.assignedSegment !== action.frames) {\n          // if they are not equal. new segments are to be loaded\n          this.player.playSegments(action.frames, true);\n          this.assignedSegment = action.frames;\n        } else {\n          // if they are equal the play method must be called only if lottie is paused\n          if (this.player.isPaused === true) {\n            this.player.playSegments(action.frames, true);\n            this.assignedSegment = action.frames;\n          }\n        }\n      }\n    } else if (action.type === 'play') {\n      // Play: Reset segments and continue playing full animation from current position\n      if (!this.scrolledAndPlayed) {\n        this.scrolledAndPlayed = true;\n        this.player.resetSegments(true);\n        this.player.play();\n      }\n    } else if (action.type === 'stop') {\n      // Stop: Stop playback\n      this.player.goToAndStop(action.frames[0], true);\n    }\n  };\n}\n\nexport const create = options => {\n  const instance = new LottieInteractivity(options);\n  instance.start();\n\n  return instance;\n};\n\nexport default create;\n"]},"metadata":{},"sourceType":"module"}